////////////////////////////////  file handling in node

const fs = require('fs');
fs.writeFileSync('hello.txt',"Hello from node js")



////////////////////////////////  creating server and getting res , req (req & response Headrs)

const http = require('http');
const server = http.createServer((req,res) => {
    console.log(req.url , req.headers , req.method)
    // this is use for exit process loop
    // process.exit()
    res.setHeader('Content-Type','text/html');

    res.write(`
    <html>
        <head>
            <title>Hello World</title>
        </head>
        <body>
            <h1>This is a dummy page</h1>
            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Dignissimos odio consectetur dolores facilis ab eos ipsum debitis, optio aspernatur maxime eum ipsam.</p>
        </body>
    </html>
    `)
    res.end();
})

server.listen(3000)


////////////////////////////////  routing requests

const http = require('http')
const server = http.createServer((req,res)=>{
    const url = req.url;
    if (url === '/'){
        res.write(`
        <html>
        <head><title>Enter Details</title></head>
        <body>
        <form action="/message" method="POST">
            <input type="text" name="message" />
            <button type="submit">Send</button>
        </form>
        </body>
        </html>
        `);
        return res.end();
    }

    res.setHeader('Content-Type','text/html');
    res.write(`
    <html>
        <head>
            <title>Hello World</title>
        </head>
        <body>
            <h1>This is a dummy page</h1>
            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Dignissimos odio consectetur dolores facilis ab eos ipsum debitis, optio aspernatur maxime eum ipsam.</p>
        </body>
    </html>
    `);
    res.end();
})

server.listen(3000)



////////////////////////////////  redirecting requests

const http = require('http')
const fs = require('fs');
const server = http.createServer((req,res)=>{
    const url = req.url;
    const method = req.method;
    if (url === '/'){
        res.write(`
        <html>
        <head><title>Enter Details</title></head>
        <body>
        <form action="/message" method="POST">
            <input type="text" name="message" />
            <button type="submit">Send</button>
        </form>
        </body>
        </html>
        `);
        return res.end();
    }

    if(url === '/message' && method === 'POST'){
        fs.writeFileSync('message.txt', 'Dummy World');
        res.statusCode = 302; // this is for redirection
        res.setHeader('Location','/');
        return res.end();
    }

    res.setHeader('Content-Type','text/html');
    res.write(`
    <html>
        <head>
            <title>Hello World</title>
        </head>
        <body>
            <h1>This is a dummy page</h1>
            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Dignissimos odio consectetur dolores facilis ab eos ipsum debitis, optio aspernatur maxime eum ipsam.</p>
        </body>
    </html>
    `);
    res.end();
})

server.listen(3000)


////////////////////////////////  parsing request bodies

const http = require('http')
const fs = require('fs');
const server = http.createServer((req,res)=>{
    const url = req.url;
    const method = req.method;
    if (url === '/'){
        res.write(`
        <html>
        <head><title>Enter Details</title></head>
        <body>
        <form action="/message" method="POST">
            <input type="text" name="message" />
            <button type="submit">Send</button>
        </form>
        </body>
        </html>
        `);
        return res.end();
    }

    if(url === '/message' && method === 'POST'){
        const data = []
        req.on('data', (chunk) => {
            console.log(chunk);
            data.push(chunk);
        })
        req.on('end', () => {
            const parsedData = Buffer.concat(data).toString();
            // console.log(parsedData);
            const message = parsedData.split('=')[1];
            fs.writeFileSync('message.txt', message);
        })
        res.statusCode = 302;
        res.setHeader('Location','/');
        return res.end();
    }

    res.setHeader('Content-Type','text/html');
    res.write(`
    <html>
        <head>
            <title>Hello World</title>
        </head>
        <body>
            <h1>This is a dummy page</h1>
            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Dignissimos odio consectetur dolores facilis ab eos ipsum debitis, optio aspernatur maxime eum ipsam.</p>
        </body>
    </html>
    `);
    res.end();
})

server.listen(3000)

//////////////////////////////// Understanding Event Driven Code Execution
const http = require('http');
const fs = require('fs')

const server = http.createServer((req, res) => {
    const url = req.url;
    const method = req.method;
    if (url === '/'){
        res.write(`
        <!DOCTYPE html>
        <html lang="en">
            <head>
                <title>Home Page</title>
                <meta charset="UTF-8">
                <meta name="viewport" content="width=device-width, initial-scale=1">
            </head>
            <body>
                <h1>Enter Details</h1>
                <form action="/message" method="POST">
                <input type="text" name="message" />
                <button type="submit">Send</button>
                </form>
            </body>
        </html>
        `);
        return res.end();
    }

    if(url === '/message' && method==="POST"){
        const data = []
        req.on('data', (chunks)=>{
            console.log(chunks);
            data.push(chunks);
        })
        return req.on('end',()=>{
            const parsedData = Buffer.concat(data).toString();
            console.log(parsedData)
            const message = parsedData.split("=")[1];
            fs.writeFileSync("file.txt",message);
            res.statusCode = 302; // for redicrect
            res.setHeader('Location','/');
            return res.end();
        })
    }

    res.setHeader('Content-Type', 'text/html');
    res.write(`
    <!DOCTYPE html>
<html lang="en">
    <head>
        <title>First Node HTMl</title>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
    </head>
    <body>
        <h1>Hello this is a first node app</h1>
        <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Inventore nobis earum, voluptates velit magnam fugit reprehenderit. Beatae quibusdam soluta libero in reprehenderit!</p>
    </body>
</html>
    `);
    res.end();
})

server.listen(3000)

//////////////////////////////// Blocking and Non-Blocking Code
const http = require('http');
const fs = require('fs')

const server = http.createServer((req, res) => {
    const url = req.url;
    const method = req.method;
    if (url === '/'){
        res.write(`
        <!DOCTYPE html>
        <html lang="en">
            <head>
                <title>Home Page</title>
                <meta charset="UTF-8">
                <meta name="viewport" content="width=device-width, initial-scale=1">
            </head>
            <body>
                <h1>Enter Details</h1>
                <form action="/message" method="POST">
                <input type="text" name="message" />
                <button type="submit">Send</button>
                </form>
            </body>
        </html>
        `);
        return res.end();
    }

    if(url === '/message' && method==="POST"){
        const data = []
        req.on('data', (chunks)=>{
            console.log(chunks);
            data.push(chunks);
        })
        return req.on('end',()=>{
            const parsedData = Buffer.concat(data).toString();
            console.log(parsedData)
            const message = parsedData.split("=")[1];
            fs.writeFile("file.txt",message, err => {
                res.statusCode = 302; // for redicrect
                res.setHeader('Location','/');
                return res.end();
            });
        })
    }

    res.setHeader('Content-Type', 'text/html');
    res.write(`
    <!DOCTYPE html>
<html lang="en">
    <head>
        <title>First Node HTMl</title>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
    </head>
    <body>
        <h1>Hello this is a first node app</h1>
        <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Inventore nobis earum, voluptates velit magnam fugit reprehenderit. Beatae quibusdam soluta libero in reprehenderit!</p>
    </body>
</html>
    `);
    res.end();
})

server.listen(3000)


//////////////////////////////// Using the Node Modules System

******** app.js
const http = require('http');
const routes = require('./routes');

const server = http.createServer(routes.handler);

server.listen(3000)

******** routes.js
const fs = require('fs');

const requestHandler = (req,res) => {
    const url = req.url;
    const method = req.method;

    if (url === '/'){
        res.write(`
        <!DOCTYPE html>
        <html lang="en">
            <head>
                <title>Home Page</title>
                <meta charset="UTF-8">
                <meta name="viewport" content="width=device-width, initial-scale=1">
            </head>
            <body>
                <h1>Enter Details</h1>
                <form action="/message" method="POST">
                <input type="text" name="message" />
                <button type="submit">Send</button>
                </form>
            </body>
        </html>
        `);
        return res.end();
    }
    
    if(url === '/message' && method==="POST"){
        const data = []
        req.on('data', (chunks)=>{
            console.log(chunks);
            data.push(chunks);
        })
        return req.on('end',()=>{
            const parsedData = Buffer.concat(data).toString();
            console.log(parsedData)
            const message = parsedData.split("=")[1];
            fs.writeFile("file.txt",message, err => {
                res.statusCode = 302; // for redicrect
                res.setHeader('Location','/');
                return res.end();
            });
        })
    }

    res.setHeader('Content-Type', 'text/html');
    res.write(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <title>First Node HTMl</title>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
    </head>
    <body>
        <h1>Hello this is a first node app</h1>
        <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Inventore nobis earum, voluptates velit magnam fugit reprehenderit. Beatae quibusdam soluta libero in reprehenderit!</p>
    </body>
    </html>
    `);
    res.end();
};

// module.exports = requestHandler;

// module.exports.handler = 'lorem ipsum';
// module.exports.someText = 'lorem ipsum';


// exports.handler = requestHandler;
// exports.someText = 'lorem ipsum';

module.exports = {
    handler:requestHandler,
    someText: 'lorem ipsum'
};


//////////////////////////////// installing Express js

npm i --save express




//////////////////////////////// How middleware works
const http = require('http');
const express = require('express');

const app = express();

app.use((req, res, next) => {
    console.log('In the middleware here!');
    next(); // Allows the req to continue to the next below middleware
});

app.use((req, res, next) => {
    console.log('In another  middleware!');
    res.send('<h1>Hello from Express.js!</h1>');
});

app.listen(3000)

//////////////////////////////// Handling Different Routes
const http = require('http');
const express = require('express');

const app = express();


app.use('/party', (req, res, next) => {
    console.log('This always runs');
    next();
});

app.use('/add-products', (req, res, next) => {
    console.log('add product');
    res.send('<h1>Add Product page</h1>');
});

app.use('/', (req, res, next) => {
    console.log('home page');
    res.send('<h1>Home Page</h1>');
});

app.listen(3000)